cmake_minimum_required(VERSION 3.7)
project(hw01_mandelbrot)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "task-01/bin")

#find_package(OpenGL REQUIRED)
#find_package(glm REQUIRED)
#include_directories(${GLM_INCLUDE_DIRS})


# Disable building extras we won't need (pure C++ project)
set(NANOGUI_BUILD_EXAMPLE OFF CACHE BOOL " " FORCE)
set(NANOGUI_BUILD_PYTHON  OFF CACHE BOOL " " FORCE)
set(NANOGUI_INSTALL       OFF CACHE BOOL " " FORCE)

# Add the configurations from nanogui
add_subdirectory(nanogui)

# For reliability of parallel build, make the NanoGUI targets dependencies
set_property(TARGET glfw glfw_objects nanogui PROPERTY FOLDER "dependencies")

# Various preprocessor definitions have been generated by NanoGUI
add_definitions(${NANOGUI_EXTRA_DEFS})

# On top of adding the path to nanogui/include, you may need extras
include_directories(${NANOGUI_EXTRA_INCS})


set(SOURCE_FILES
        task-01/src/main.cpp
        task-01/src/MainView.cpp
        task-01/src/MainView.h
        task-01/src/ShadersLoader.cpp
        task-01/src/ShadersLoader.h)

add_executable(hw01_mandelbrot ${SOURCE_FILES})
target_link_libraries(hw01_mandelbrot nanogui ${NANOGUI_EXTRA_LIBS})
